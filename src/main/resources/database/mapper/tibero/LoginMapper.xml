<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="LoginMapper">

	<!-- 로그인 중도매인 리스트 조회 -->
	<select id="selectWholesalerList" parameterType="map" resultType="map">
		SELECT A.NA_BZPLC
			 , A.TRMN_AMNNO
			 , A.MWMN_NA_TRPL_C
			 , A.SRA_MWMNNM
			 , A.FRLNO
			 , A.ZIP
			 , A.DONGUP
			 , A.DONGBW
			 , A.OHSE_TELNO
			 , A.CUS_MPNO
			 , A.MACO_YN
			 , A.JRDWO_DSC
			 , A.PSN_INF_OFR_AGR_YN
			 , A.TMS_YN
			 , A.DEL_YN
			 , A.RMK_CNTN
			 , A.CUS_RLNO
			 , A.LSCHG_DTM
			 , A.LS_CMENO
			 , A.FSRG_DTM
			 , A.FSRGMN_ENO
		  FROM TB_LA_IS_MM_MWMN A
		 WHERE A.SRA_MWMNNM = #{userName}
		   AND A.CUS_RLNO = #{birthDate}
		   AND A.DEL_YN = '0'
		   AND EXISTS (
				SELECT 1 FROM TB_LA_IS_BM_BZLOC B WHERE B.NA_BZPLC = A.NA_BZPLC AND B.NA_BZPLCNO = #{place}
			 )
	</select>
	
	<!-- 조합코드(NA_BZPLC)와 거래인 관리번호(TRMN_AMNNO)로 중도매인 조회 -->
	<select id="selectWholesaler" parameterType="map" resultType="map">
		SELECT A.NA_BZPLC
			 , B.NA_BZPLCNO 
			 , A.TRMN_AMNNO
			 , A.MWMN_NA_TRPL_C
			 , A.SRA_MWMNNM
			 , A.FRLNO
			 , A.ZIP
			 , A.DONGUP
			 , A.DONGBW
			 , A.OHSE_TELNO
			 , A.CUS_MPNO
			 , A.MACO_YN
			 , A.JRDWO_DSC
			 , A.PSN_INF_OFR_AGR_YN
			 , A.TMS_YN
			 , A.DEL_YN
			 , A.RMK_CNTN
			 , A.CUS_RLNO
			 , A.LSCHG_DTM
			 , A.LS_CMENO
			 , A.FSRG_DTM
			 , A.FSRGMN_ENO
			 , A.SMS_YMD
			 , A.SMS_NO
		  FROM TB_LA_IS_MM_MWMN A
		  LEFT OUTER JOIN TB_LA_IS_BM_BZLOC B
		    ON ( A.NA_BZPLC = B.NA_BZPLC )
		 WHERE A.NA_BZPLC = #{naBzplc}
		   AND A.TRMN_AMNNO = #{trmnAmnno}
		   <if test="naBzplcno != null and naBzplcno != ''">
		   		AND B.NA_BZPLCNO = #{naBzplcno}
		   </if>
		   AND A.DEL_YN = '0'
	</select>
	
	<!-- 로그인 출하주 정보 조회 -->
	<select id="selectFarmUserList" parameterType="map" resultType="map">
		SELECT A.NA_BZPLC
			 , A.FHS_ID_NO ||  '-' || A.FARM_AMNNO AS TRMN_AMNNO
			 , A.FHS_ID_NO
			 , A.FARM_AMNNO
			 , A.NA_TRPL_C
			 , A.FTSNM
			 , A.ZIP
			 , A.DONGUP
			 , A.DONGBW
			 , A.OHSE_TELNO
			 , A.CUS_MPNO
			 , A.MACO_YN
			 , A.RMK_CNTN
			 , A.JRDWO_DSC
			 , A.DEL_YN
			 , A.ANW_YN
			 , A.HDWK_RG_YN
			 , A.SRA_FARM_ACNO
			 , A.NEW_SRA_FARM_ACNO
			 , A.SRA_FED_SPY_YN
			 , A.BIRTH
			 , A.FSRG_DTM
			 , A.FSRGMN_ENO
			 , A.LSCHG_DTM
			 , A.LS_CMENO
		  FROM TB_LA_IS_MM_FHS A
		 WHERE A.FTSNM = #{userName}
		   AND (
				REGEXP_REPLACE(A.OHSE_TELNO, '[^0-9]') = REGEXP_REPLACE(#{telNo}, '[^0-9]')
				OR
				REGEXP_REPLACE(A.CUS_MPNO, '[^0-9]') = REGEXP_REPLACE(#{telNo}, '[^0-9]')
			 )
		   AND DEL_YN = '0'
		   AND EXISTS (
				SELECT 1 FROM TB_LA_IS_BM_BZLOC B WHERE B.NA_BZPLC = A.NA_BZPLC AND B.NA_BZPLCNO = #{place}
			 )
	</select>
	
	<!-- 조합코드(NA_BZPLC)와 농가 식별번호(FHS_ID_NO)로 출하주 조회 -->
	<select id="selectFarmUser" parameterType="map" resultType="map">
		SELECT A.NA_BZPLC
			 , B.NA_BZPLCNO
			 , A.FHS_ID_NO AS TRMN_AMNNO
			 , A.FHS_ID_NO
			 , A.FARM_AMNNO
			 , A.NA_TRPL_C
			 , A.FTSNM
			 , A.ZIP
			 , A.DONGUP
			 , A.DONGBW
			 , A.OHSE_TELNO
			 , A.CUS_MPNO
			 , A.MACO_YN
			 , A.RMK_CNTN
			 , A.JRDWO_DSC
			 , A.DEL_YN
			 , A.ANW_YN
			 , A.HDWK_RG_YN
			 , A.SRA_FARM_ACNO
			 , A.NEW_SRA_FARM_ACNO
			 , A.SRA_FED_SPY_YN
			 , A.BIRTH
			 , A.FSRG_DTM
			 , A.FSRGMN_ENO
			 , A.LSCHG_DTM
			 , A.LS_CMENO
		  FROM TB_LA_IS_MM_FHS A
		  LEFT OUTER JOIN TB_LA_IS_BM_BZLOC B
			ON ( A.NA_BZPLC = B.NA_BZPLC )
		 WHERE A.FHS_ID_NO = #{fhsIdNo}
		   AND A.NA_BZPLC = #{naBzplc}
		   AND A.DEL_YN = '0'
		   AND B.NA_BZPLCNO = #{naBzplcno}
	</select>
	
	<!-- 방문자 이력 저장 -->
	<insert id="insertVisitor" parameterType="map">
		INSERT INTO tb_la_is_bm_visit
		(
		    SEQ_NO,
		    VISIT_IP,
		    VISIT_DTM,
		    VISIT_REFER,
		    VISIT_AGENT
		)
		VALUES
		(
		    SQ_LA_IS_BM_VISIT.nextval,
		    #{visit_ip},
		    SYSDATE,
		    #{visit_refer},
		    #{visit_agent}
		)
	</insert>
	
	<!-- 인증번호 정보 조회 -->
	<select id="selectAuthNumberInfo" parameterType="map" resultType="map">
		SELECT SMS_YMD
			 , SMS_NO
			 , CUS_MPNO
			 , SRA_MWMNNM
		  FROM TB_LA_IS_MM_MWMN
		 WHERE NA_BZPLC = #{naBzplc}
		   AND TRMN_AMNNO = #{trmnAmnno}
	</select>
	
	<!-- 새로 받급받은 인증번호 저장 -->
	<update id="updateAuthNumber" parameterType="map">
		UPDATE TB_LA_IS_MM_MWMN
		   SET SMS_YMD = TO_CHAR(SYSDATE, 'YYYYMMDD')
			 , SMS_NO = #{smsNo}
		 WHERE NA_BZPLC = #{naBzplc}
		   AND TRMN_AMNNO = #{trmnAmnno}
	</update>
	
	<insert id="sendSms" parameterType="map">
		<selectKey keyProperty="smsFwdgSqno" resultType="int" order="BEFORE">
			SELECT NVL(MAX(SMS_FWDG_SQNO)+1,1) AS NEXT_NUM
			  FROM TB_LA_IS_MM_SMS
			  WHERE NA_BZPLC = #{naBzplc}
			  AND SMS_FWDG_DT = TO_CHAR(SYSDATE, 'YYYYMMDD')
		</selectKey>
		INSERT INTO TB_LA_IS_MM_SMS (
			NA_BZPLC
			, SMS_FWDG_DT
			, SMS_FWDG_SQNO
			, AUC_OBJ_DSC
			, TRMN_AMNNO
			, DPAMN_DSC
			, SEL_STS_DSC
			, RMS_MN_NAME
			, SMS_RMS_MPNO
			, IO_TRMSNM
			, SMS_TRMS_TELNO
			, SMS_FWDG_CNTN
			, TMS_YN
			, TMS_CN
			, FSRG_DTM
			, FSRGMN_ENO
			, LSCHG_DTM
			, LS_CMENO
		) VALUES (
			#{naBzplc}
			, TO_CHAR(SYSDATE, 'YYYYMMDD')
			, #{smsFwdgSqno}
			, #{aucObjDsc}
			, #{trmnAmnno}
			, '1'
			, '11'
			, #{rmsMnName}
			, #{smsRmsMpno}
			, #{ioTrmsnm}
			, #{smsTrmsTelno}
			, #{smsFwdgCntn}
			, '0'
			, '0'
			, SYSDATE
			, 'SYSTEM'
			, SYSDATE
			, 'SYSTEM'
		)
		
	</insert>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>