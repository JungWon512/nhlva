<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="auction">
	<select id="selectListAucEntry" parameterType="map" resultType="map">
		SELECT G.*
			 , CASE WHEN G.GAP_DAY = 0 THEN G.BIRTH_STR || '(' || TO_CHAR(G.GAP_MONTH ) || '개월)' 
					ELSE G.BIRTH_STR || '(' || TO_CHAR(G.GAP_MONTH) || '개월 ' || TO_CHAR(G.GAP_DAY) || '일)'
				END AS BIRTH_MONTH
			 ,CASE WHEN LENGTH(G.FTSNM_ORI) > 1 THEN SUBSTRING(G.FTSNM_ORI,1,1)  || '*' ||	SUBSTRING(G.FTSNM_ORI,3)
			 WHEN LENGTH(G.FTSNM_ORI) = 1 THEN G.FTSNM_ORI
			 ELSE '-' END FTSNM
		  FROM (
				SELECT B.NA_BZPLC               /* 사업장번호	*/
					, B.SRA_INDV_AMNNO         /* 축산개체관리번호	*/
					, SUBSTRING(B.SRA_INDV_AMNNO,LENGTH(B.SRA_INDV_AMNNO)-4,5) SRA_INDV_AMNNO_STR /* 축산개체관리번호(앞자리 7자 제거)	*/
					, SUBSTRING(B.SRA_INDV_AMNNO,LENGTH(B.SRA_INDV_AMNNO)-4,4) || '-' || SUBSTRING(B.SRA_INDV_AMNNO, LENGTH(B.SRA_INDV_AMNNO), 1) AS SRA_INDV_AMNNO_FORMAT
					, B.SRA_SRS_DSC            /* 축산축종구분코드: 01	*/
					, B.FHS_ID_NO              /* 농가식별번호	*/
					, B.FARM_AMNNO             /* 농장관리번호	*/
					, B.OSLP_NO                /* 원표번호	*/
					, (SELECT C.FTSNM
					  FROM TB_LA_IS_MM_FHS C
					 WHERE C.NA_BZPLC = B.NA_BZPLC
					   AND C.FHS_ID_NO = B.FHS_ID_NO
					   AND C.FARM_AMNNO = B.FARM_AMNNO
					) AS FTSNM_ORI
					, B.LED_SQNO				/* 원장일련번호 */
					, B.AUC_PRG_SQ             /* 경매진행순서 (출품번호)	*/
					, A.BIRTH                  /* 생년월일  (생년)	*/
					, TO_CHAR(TO_DATE(A.BIRTH,'YYYYMMDD'),'YY.MM.DD') BIRTH_STR                 /* 생년월일  (생년)	*/	
					, TO_CHAR(TO_DATE(A.BIRTH,'YYYYMMDD'),'YY.MM') BIRTH_MO /* 생년월일  (생년) 모바일용	*/
					, A.MCOW_DSC               /* 어미소구분코드	*/
					, CASE
							WHEN A.MCOW_DSC = '01' THEN '기초'		
							WHEN A.MCOW_DSC = '02' THEN '혈통'		
							WHEN A.MCOW_DSC = '03' THEN '고등'		
							WHEN A.MCOW_DSC = '09' THEN '미등록우'
							ELSE '-'
						END MCOW_DSC_NAME
					, NVL(A.KPN_NO,'-') KPN_NO                /* KPN번호  (KPN)	*/
					, NVL(REPLACE (A.KPN_NO,'KPN',''),'-') KPN_NO_STR /* KPN번호  (KPN 제거)	*/
					, A.INDV_SEX_C             /* 개체성별구분코드: 0없음1암2수3거세4미경산5비거세6프리마틴9공통  (성별)	*/
					, CASE
							WHEN A.INDV_SEX_C = 0 THEN '없음'		
							WHEN A.INDV_SEX_C = 1 THEN '암'		
							WHEN A.INDV_SEX_C = 2 THEN '수'		
							WHEN A.INDV_SEX_C = 3 THEN '거세'		
							WHEN A.INDV_SEX_C = 4 THEN '미경산'		
							WHEN A.INDV_SEX_C = 5 THEN '비거세'		
							WHEN A.INDV_SEX_C = 6 THEN '프리마틴'		
							WHEN A.INDV_SEX_C = 9 THEN '공통'
							ELSE '없음'
						END INDV_SEX_C_NAME
					, A.MCOW_SRA_INDV_AMNNO    /* 어미소축산개체관리번호	*/
					, A.MATIME                 /* 산차  (산차)	*/
					, A.SRA_INDV_PASG_QCN      /* 계대  (계대)	*/
					, A.INDV_ID_NO             /* 개체식별번호  (개체번호)	*/
					, A.SRA_INDV_BRDSRA_RG_NO  /* 축산개체종축등록번호	*/
					, A.RG_DSC                 /* 등록구분번호	*/
					, B.AUC_OBJ_DSC            /* 경매대상구분코드: 1송아지,2비육우,3번식우 (경매구분)*/
					, B.AUC_DT		           /* 경매일자 (경매일자)*/
					, TO_CHAR(TO_DATE(B.AUC_DT,'YYYYMMDD'),'YYYY.MM.DD') AUC_DT_STR /* 경매일자 (경매일자) FORMAT*/	
					, TO_CHAR(TO_DATE(B.AUC_DT,'YYYYMMDD'),'MM.DD') AUC_DT_STR_MD /* 경매일자 (경매일자) FORMAT	*/
					, B.TRMN_AMNNO             /* 거래인관리번호(중도매인기준정보번호)*/
					, B.LVST_AUC_PTC_MN_NO     /* 가축경매참여자번호(참가번호)*/
					, NVL(TRIM(B.COW_SOG_WT),0) COW_SOG_WT             /* 우출하중량	      (중량)*/
					, B.FIR_LOWS_SBID_LMT_AM   /* 최초최저낙찰한도금액(원단위)*/
					, B.LOWS_SBID_LMT_AM       /* 최저낙찰한도금액  (최저가-원단위)*/
					, CASE WHEN B.AUC_OBJ_DSC = '1' THEN ROUND(B.FIR_LOWS_SBID_LMT_AM / NVL(J.CALF_AUC_ATDR_UNT_AM, 10000))
							WHEN B.AUC_OBJ_DSC = '2' THEN ROUND(B.FIR_LOWS_SBID_LMT_AM / NVL(J.NBFCT_AUC_ATDR_UNT_AM, 1))
							WHEN B.AUC_OBJ_DSC = '3' THEN ROUND(B.FIR_LOWS_SBID_LMT_AM / NVL(J.PPGCOW_AUC_ATDR_UNT_AM, 10000))
							ELSE ROUND(B.FIR_LOWS_SBID_LMT_AM / 10000)
						END AS FIR_LOWS_SBID_LMT_UPR
					, CASE WHEN B.AUC_OBJ_DSC = '1' THEN ROUND(B.LOWS_SBID_LMT_AM / NVL(J.CALF_AUC_ATDR_UNT_AM, 10000))
							WHEN B.AUC_OBJ_DSC = '2' THEN ROUND(B.LOWS_SBID_LMT_AM / NVL(J.NBFCT_AUC_ATDR_UNT_AM, 1))
							WHEN B.AUC_OBJ_DSC = '3' THEN ROUND(B.LOWS_SBID_LMT_AM / NVL(J.PPGCOW_AUC_ATDR_UNT_AM, 10000))
							ELSE ROUND(B.LOWS_SBID_LMT_AM / 10000)
						END AS LOWS_SBID_LMT_UPR
					, B.LWPR_CHG_NT            /* 최저가변경횟수 */
					, B.RMK_CNTN               /* 비고내용    (비고)*/
					, B.BRANDNM                /* 브랜드명    (브랜드)*/
					, SUBSTR(B.SRA_PDMNM,1,1)||'*'||SUBSTR(B.SRA_PDMNM,3,LENGTH(B.SRA_PDMNM)-2) SRA_PDMNM              /* 축산생산자명 (출하주명)*/
					, B.SRA_PDMNM AS SRA_PDMNM_ORI	/* 출하주명 */	
					, B.SRA_PD_RGNNM           /* 축산생산지역 (출하지역)	*/
					, B.SRA_SBID_AM            /* 축산낙찰금액 (낙찰단가-원단위)	*/
					, B.SRA_SBID_UPR           /* 축산낙찰단가 (낙찰단가-만단위)	*/
					, B.SEL_STS_DSC            /* 판매상태구분코드: 11대기,22낙찰,23보류	*/
					, CASE
						WHEN B.SEL_STS_DSC = 11 THEN '대기'		
						WHEN B.SEL_STS_DSC = 22 THEN '낙찰'		
						WHEN B.SEL_STS_DSC = 23 THEN '유찰'
						ELSE '대기'
					END SEL_STS_DSC_NAME
					, B.PRNY_YN                /* 임신여부    (임신여부)	*/
					, B.PRNY_MTCN              /* 임신개월수   (임신개월)	*/
					, B.AUC_YN                 /* 경매여부    (경매여부)	*/
					<if test="loginNo != null and loginNo != ''">
						, C.SBID_UPR                 /* 찜 가격 (단가)	*/
					</if>	
					, CASE WHEN MONTHS_BETWEEN(TO_DATE(B.AUC_DT,'YYYYMMDD'), TO_DATE(A.BIRTH,'YYYYMMDD')) <![CDATA[<=]]> 4 THEN 4
						  ELSE TRUNC(MONTHS_BETWEEN(TO_DATE(B.AUC_DT,'YYYYMMDD'), TO_DATE(A.BIRTH,'YYYYMMDD')))
					END GAP_MONTH
					, CASE WHEN MONTHS_BETWEEN(TO_DATE(B.AUC_DT,'YYYYMMDD'), TO_DATE(A.BIRTH,'YYYYMMDD')) <![CDATA[<]]> 4 THEN 0
						  ELSE GREATEST(TO_DATE(B.AUC_DT,'YYYYMMDD') - ADD_MONTHS(TO_DATE(A.BIRTH,'YYYYMMDD'), TRUNC(MONTHS_BETWEEN(TO_DATE(B.AUC_DT,'YYYYMMDD'), TO_DATE(A.BIRTH,'YYYYMMDD')))) + 1, 0) - 1
					END GAP_DAY
					, NVL(B.MODL_NO, B.AUC_PRG_SQ) AS MODL_NO
					, CASE WHEN B.AUC_OBJ_DSC = '1' THEN ROUND(NVL(J.CALF_AUC_ATDR_UNT_AM, 10000))
							WHEN B.AUC_OBJ_DSC = '2' THEN ROUND(NVL(J.NBFCT_AUC_ATDR_UNT_AM, 1))
							WHEN B.AUC_OBJ_DSC = '3' THEN ROUND(NVL(J.PPGCOW_AUC_ATDR_UNT_AM, 10000))
							ELSE 10000
					END AS DIVISION_PRICE
				FROM TB_LA_IS_MH_SOG_COW B
				LEFT JOIN TB_LA_IS_MM_INDV A
				  ON (
						A.NA_BZPLC = B.NA_BZPLC 
						AND A.SRA_SRS_DSC  = B.SRA_SRS_DSC
						AND A.SRA_INDV_AMNNO = B.SRA_INDV_AMNNO
					)
				<if test="loginNo != null and loginNo != ''">
					LEFT JOIN TB_LA_IS_MH_SOG_ZIM C ON B.NA_BZPLC =C.NA_BZPLC             
													AND B.AUC_OBJ_DSC = C.AUC_OBJ_DSC            
													AND B.AUC_DT = C.AUC_DT           
													AND B.OSLP_NO = C.OSLP_NO
													AND C.TRMN_AMNNO = #{loginNo}
				</if>
				INNER JOIN TB_LA_IS_BM_BZLOC D ON B.NA_BZPLC = D.NA_BZPLC
				LEFT OUTER JOIN TB_LA_IS_MM_ENV_EST J
				  ON ( B.NA_BZPLC = J.NA_BZPLC )
				WHERE 1=1
			<if test="naBzPlcNo != null and naBzPlcNo != ''">
				AND D.NA_BZPLCNO = #{naBzPlcNo}
			</if>
			<if test="naBzplc != null and naBzplc != ''">
				AND B.NA_BZPLC = #{naBzplc}
			</if>
			<if test="searchTxt != null and searchTxt != ''">
			    AND (
			    	SUBSTRING(A.SRA_INDV_AMNNO,LENGTH(A.SRA_INDV_AMNNO)-4,4 ) LIKE '%' || #{searchTxt} ||'%'
			    	OR
			    	TO_CHAR(B.AUC_PRG_SQ) LIKE '%' || #{searchTxt} ||'%'
			    )
			</if>	
			<choose>	
				<when test="searchDate != null and searchDate != ''">
				    AND B.AUC_DT = #{searchDate}
				</when>
				<otherwise>
					AND B.AUC_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
				</otherwise>
			</choose>
			<if test="searchAucObjDsc != null and searchAucObjDsc != ''">
				AND B.AUC_OBJ_DSC = CASE WHEN TO_CHAR(#{searchAucObjDsc}) = '0' THEN B.AUC_OBJ_DSC ELSE TO_CHAR(#{searchAucObjDsc}) END
			</if>
			<if test="searchAucPrgSq != null and searchAucPrgSq != ''">
				AND B.AUC_PRG_SQ =#{searchAucPrgSq}
			</if>
			<if test="searchTrmnAmnNo != null and searchTrmnAmnNo != ''">
				AND B.TRMN_AMNNO=#{searchTrmnAmnNo}
			</if>
			<if test="searchFhsIdNo != null and searchFhsIdNo != ''">
				AND B.FHS_ID_NO = #{searchFhsIdNo}
			</if>
			<if test="searchFarmAmnno != null and searchFarmAmnno != ''">
				AND B.FARM_AMNNO = #{searchFarmAmnno}
			</if>
			<if test="stAucNo !=null and !stAucNo.equals('') and edAucNo !=null and !edAucNo.equals('')">
				AND B.AUC_PRG_SQ <![CDATA[>=]]> #{stAucNo}
				AND B.AUC_PRG_SQ <![CDATA[<=]]> #{edAucNo}
			</if>
			) G
		ORDER BY AUC_DT ,AUC_PRG_SQ ASC
    </select>
    
    
    <select id="selectCountEntry" parameterType="map" resultType="map">
    	SELECT T.* 
		, DECODE(CNT,0,0,ROUND(CNT_STAND_ELSE / CNT * 100)) AS CNT_PERCENT
		FROM (
	    	SELECT 
				COUNT(*) CNT	/* 전체	*/
				, COUNT(CASE WHEN (A.INDV_SEX_C = 1 OR A.INDV_SEX_C = 6) THEN 1 END) CNT_SEX_W /* 전체 암컷 출장우 */
				, COUNT(CASE WHEN A.INDV_SEX_C = 2 THEN 1 END) CNT_SEX_M /* 전체 수컷 출장우 */
				, COUNT(CASE WHEN A.INDV_SEX_C != 2 AND A.INDV_SEX_C != 6 AND A.INDV_SEX_C != 1 THEN 1 END) CNT_SEX_ETC /* 전체 암수 출장우가 아닌것*/
				, COUNT(CASE WHEN B.AUC_OBJ_DSC = '1' AND (A.INDV_SEX_C = 1 OR A.INDV_SEX_C = 6) THEN 1 END) CNT_CALF_SEX_W /* 전체 암컷 출장우 */
				, COUNT(CASE WHEN B.AUC_OBJ_DSC = '1' AND A.INDV_SEX_C = 2 THEN 1 END) CNT_CALF_SEX_M /* 전체 수컷 출장우 */
				, COUNT(CASE WHEN B.AUC_OBJ_DSC = '2' THEN 1 END) CNT_NO_COW /* 전체 비육우*/
				, COUNT(CASE WHEN B.AUC_OBJ_DSC = '3' THEN 1 END) CNT_COW /* 전체 번식우 */
				,COUNT(CASE WHEN B.SEL_STS_DSC = 11 THEN 1 END) CNT_STAND	/* 대기	*/
				,COUNT(CASE WHEN B.SEL_STS_DSC != 11 THEN 1 END) CNT_STAND_ELSE	/* 대기 이외	*/
				,COUNT(CASE WHEN B.SEL_STS_DSC = 22 THEN 1 END) CNT_BID	/* 낙찰	*/
				,COUNT(CASE WHEN B.SEL_STS_DSC = 23 THEN 1 END) CNT_HOLD	/* 보류	*/
				,COUNT(CASE WHEN B.COW_SOG_WT = 0 AND B.LOWS_SBID_LMT_AM = 0 THEN 1 END) CNT_ABSENT	/* 미출장	*/
				,LISTAGG(DECODE(B.SEL_STS_DSC,11,NULL,B.AUC_PRG_SQ),',') WITHIN GROUP(ORDER BY B.AUC_PRG_SQ) AS LIST_AUCNUM	
			FROM TB_LA_IS_MH_SOG_COW B
			LEFT JOIN TB_LA_IS_MM_INDV  A ON A.NA_BZPLC = B.NA_BZPLC 
		        							AND A.SRA_SRS_DSC  = B.SRA_SRS_DSC
											AND A.SRA_INDV_AMNNO = B.SRA_INDV_AMNNO
			INNER JOIN TB_LA_IS_BM_BZLOC D ON B.NA_BZPLC = D.NA_BZPLC
			WHERE 1=1
	        <if test="naBzPlcNo != null and naBzPlcNo != ''">
				AND D.NA_BZPLCNO = #{naBzPlcNo}
	        </if>			
	        <if test="naBzplc != null and naBzplc != ''">
				AND A.NA_BZPLC = #{naBzplc}
			</if>
	        <if test="searchDate != null and searchDate != ''">
	            AND B.AUC_DT = #{searchDate}
	        </if>
	        <if test="searchTrmnAmnNo != null and searchTrmnAmnNo != ''">
	            AND B.TRMN_AMNNO = #{searchTrmnAmnNo}
	        </if>
	        <if test="searchAucObjDsc != null and searchAucObjDsc != ''">
				AND B.AUC_OBJ_DSC=TO_CHAR(#{searchAucObjDsc})
	        </if>
        ) T
    </select>

    <resultMap type="HashMap" id="AucNoticeMap">
        <result property="johpCd" column="NA_BZPLC"/>
        <result property="seqNo" column="BBRD_SQNO"/>
        <result property="title" column="BBRD_TINM"/>
        <result property="content" column="BBRD_CNTN"/>
        <result property="delYn" column="BBRD_DEL_YN"/>
        <result property="regDtm" column="FSRG_DTM"/>
        <result property="regUsrid" column="FSRGMN_ENO"/>
        <result property="uptDtm" column="LSCHG_DTM"/>
        <result property="uptUsrid" column="LS_CMENO"/>
    </resultMap>

    <select id="selectListNotice" parameterType="map" resultType="map">
        SELECT
			NA_BZPLC
			, BLBD_DSC
			, BBRD_SQNO
			, RL_SQNO
			, BBRD_TINM
			, BBRD_CNTN
			, BBRD_INQ_CN
			, APDFL_ID
			, PUP_UYN
			, FIX_YN 
			, BBRD_DEL_YN 
			, ST_DT
			, ED_DT
            , TO_CHAR(FSRG_DTM,'YYYY-MM-DD') FSRG_DTM
            , FSRGMN_ENO
            , TO_CHAR(LSCHG_DTM,'YYYY-MM-DD') LSCHG_DTM
			, LS_CMENO
        FROM  TB_LA_IS_MM_BLBD
        <trim  prefix="WHERE" suffixOverrides="AND | OR">
            ( (BLBD_DSC = '1' AND NA_BZPLC = #{johpCd})
  			OR (BLBD_DSC = '3' AND NA_BZPLC = '0000000000000')
  			) AND
            BBRD_DEL_YN = #{delYn} AND
        </trim>
        ORDER BY NA_BZPLC,FSRG_DTM DESC
    </select>
    
    <select id="selectOneNotice" parameterType="map" resultType="map">
        SELECT
			NA_BZPLC
			, BLBD_DSC
			, BBRD_SQNO
			, RL_SQNO
			, BBRD_TINM
			, BBRD_CNTN
			, BBRD_INQ_CN
			, APDFL_ID
			, PUP_UYN
			, FIX_YN 
			, BBRD_DEL_YN 
			, ST_DT
			, ED_DT
            , TO_CHAR(FSRG_DTM,'YYYY-MM-DD') FSRG_DTM
            , FSRGMN_ENO
            , TO_CHAR(LSCHG_DTM,'YYYY-MM-DD') LSCHG_DTM
			, LS_CMENO
        FROM  TB_LA_IS_MM_BLBD
        <trim  prefix="WHERE" suffixOverrides="AND | OR">
        	<choose>
        		<when test="blbdDsc == '3'.toString()">        		
            		NA_BZPLC = '0000000000000' AND
        		</when>
        		<otherwise>
            NA_BZPLC = #{johpCd} AND
        		</otherwise>
        	</choose>
            BBRD_SQNO = #{seqNo} AND
            BLBD_DSC = #{blbdDsc} AND
        </trim>
    </select>
    
    <sql id="allResultNoti">
        <trim suffixOverrides=",">
            NA_BZPLC,
            SEQ_NO,
            TITLE,
            CONTENT,
            DEL_YN,
            TO_CHAR(FSRG_DTM,'YYYY-MM-DD') FSRG_DTM,
            FSRGMN_ENO,
            TO_CHAR(LSCHG_DTM,'YYYY-MM-DD') LSCHG_DTM,
            LS_CMENO,
        </trim>
    </sql>
	
    <select id="selectNearAucDate" parameterType="map" resultType="map">
		SELECT 
			MIN(AUC_DT) AUC_DT
		FROM(
			SELECT 
				B.NA_BZPLCNO
				,A.AUC_DT
			FROM TB_LA_IS_MH_AUC_STN A
			INNER JOIN TB_LA_IS_BM_BZLOC B ON A.NA_BZPLC = B.NA_BZPLC
			WHERE 1=1
			AND A.DEL_YN = 0
			AND B.NA_BZPLCNO = #{naBzPlcNo}
			<if test="searchDate != null and searchDate != ''">
				AND A.AUC_DT <![CDATA[>=]]> #{searchDate}
			</if>
			UNION ALL
			SELECT 
				B.NA_BZPLCNO
				,A.AUC_DT
			FROM TB_LA_IS_MH_AUC_QCN A
			INNER JOIN TB_LA_IS_BM_BZLOC B ON A.NA_BZPLC = B.NA_BZPLC
			WHERE 1=1
			AND A.DEL_YN = 0
			AND B.NA_BZPLCNO = #{naBzPlcNo}
			<if test="searchDate != null and searchDate != ''">
				AND A.AUC_DT <![CDATA[>=]]> #{searchDate}
			</if>
		) AS TEMP	
		GROUP BY TEMP.NA_BZPLCNO	    
    </select>
    
    <select id="selectAucDateList" parameterType="map" resultType="map">
		SELECT AUC_DT 
			, NA_BZPLC
			, TO_CHAR(TO_DATE(AUC_DT,'YYYYMMDD'),'YY.MM.DD') AUC_DT_STR
			, AGGR_CONCAT(AUC_OBJ_DSC, ',') AS AUC_OBJ_DSC
		FROM (
			SELECT AUC_DT ,NA_BZPLC, AUC_OBJ_DSC
			FROM TB_LA_IS_MH_AUC_QCN
			WHERE NA_BZPLC = #{naBzPlc}
			AND DEL_YN = 0
			<choose>
				<when test = 'entryType == "B"'>
					AND AUC_DT BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE + 7,-6),'YYYYMMDD')
						AND TO_CHAR(SYSDATE+7,'YYYYMMDD')
				</when>
				<otherwise>
					AND AUC_DT BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-6),'YYYYMMDD')
						AND TO_CHAR(SYSDATE,'YYYYMMDD') 
				</otherwise>
			</choose> 
			UNION ALL
			SELECT AUC_DT ,NA_BZPLC, AUC_OBJ_DSC
			FROM TB_LA_IS_MH_AUC_STN
			WHERE NA_BZPLC = #{naBzPlc}
			AND DEL_YN = 0
			<choose>
				<when test = 'entryType == "B"'>
					AND AUC_DT BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE + 7,-6),'YYYYMMDD')
						AND TO_CHAR(SYSDATE+7,'YYYYMMDD')
				</when>
				<otherwise>
					AND AUC_DT BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-6),'YYYYMMDD')
						AND TO_CHAR(SYSDATE,'YYYYMMDD') 
				</otherwise>
			</choose> 
		) TEMP
		GROUP BY NA_BZPLC, AUC_DT
		ORDER BY AUC_DT DESC
    </select>
    
    <!-- Front home화면 지역 리스트 2 -->
    <select id="selectBizLocList" parameterType="map" resultType="map">
    	SELECT *
    	FROM (    	
			SELECT 
				NA_BZPLCNO
				, NA_BZPLCLOC 
				, CLNTNM
				, NA_BZPLC 
				, LAT 
				, LNG
				, FSRG_DTM 
				, FSRGMN_ENO
				, LSCHG_DTM 
				, LS_CMENO 
				, RMK_CNTN 
				, AUC_YN 
				, DEL_YN
				, AREAORD 
				, AREANM
				, ( SELECT COUNT(*) FROM  (
						SELECT NA_BZPLC,AUC_DT FROM TB_LA_IS_MH_AUC_QCN
						UNION ALL
						SELECT NA_BZPLC,AUC_DT FROM TB_LA_IS_MH_AUC_STN
					) AUC_DT
					WHERE NA_BZPLC = LOC.NA_BZPLC 
					AND AUC_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
				) AUC_CNT
			FROM TB_LA_IS_BM_BZLOC LOC
			WHERE 1=1
			AND DEL_YN = 0
			<if test="naBzPlcLoc != null and naBzPlcLoc != ''">
				AND NA_BZPLCLOC = #{naBzPlcLoc}
			</if>
			<if test="naBzPlcNo != null and naBzPlcNo != ''">
				AND NA_BZPLCNO = #{naBzPlcNo}
			</if>
		) TEMP
		WHERE 1=1
		<if test='auctingYn == "Y"'>
			AND AUC_CNT > 0
		</if>		
		ORDER BY AUC_YN DESC,NA_BZPLCNO , NA_BZPLCLOC ,AREAORD
    </select>
    
    <!-- Front home화면 지역 리스트 1 -->
    <select id="selectBizList" parameterType="map" resultType="map">  
		SELECT NA_BZPLCLOC
			, CASE 	WHEN NA_BZPLCLOC = 'A31' THEN '경기/인천'
					WHEN NA_BZPLCLOC = 'A33' THEN '강원'
					WHEN NA_BZPLCLOC = 'A41' THEN '충남'
					WHEN NA_BZPLCLOC = 'A43' THEN '충북'
					WHEN NA_BZPLCLOC = 'A52' THEN '울산'
					WHEN NA_BZPLCLOC = 'A55' THEN '경남'
					WHEN NA_BZPLCLOC = 'A54' THEN '경북'
					WHEN NA_BZPLCLOC = 'A61' THEN '전남'
					WHEN NA_BZPLCLOC = 'A63' THEN '전북'
					WHEN NA_BZPLCLOC = 'A64' THEN '제주'
			ELSE '' END NA_BZPLCLOC_NM
			,SUM(AUC_YN) AUC_YN
			,SUM(CASE WHEN QCN_CNT > 0 THEN 1 ELSE 0 END) CUR_AUC_CNT
		FROM 
			(SELECT 
				LOC.NA_BZPLCLOC
				, LOC.AUC_YN
				, (SELECT COUNT(*) FROM TB_LA_IS_MH_AUC_QCN QCN 
					WHERE QCN.NA_BZPLC = LOC.NA_BZPLC 
					AND QCN.AUC_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
				) QCN_CNT
			FROM TB_LA_IS_BM_BZLOC LOC
			WHERE LOC.DEL_YN = 0
			)TMP
		GROUP BY NA_BZPLCLOC
		ORDER BY NA_BZPLCLOC
    </select>
    
	<select id="selectCalendarList" parameterType="map" resultType="map">
		SELECT 
			A.NA_BZPLC
			,A.AUC_DT 
			, TO_CHAR(TO_DATE(A.AUC_DT,'YYYYMMDD'),'YYYY') AUC_YEAR  
			, TO_CHAR(TO_DATE(A.AUC_DT,'YYYYMMDD'),'MM') AUC_MONTH
			, TO_CHAR(TO_DATE(A.AUC_DT,'YYYYMMDD'),'DD') AUC_DAY
<!-- 			, TO_CHAR(TO_DATE(A.AUC_DT,'YYYYMMDD'),'DY') AUC_WEEK_DAY -->
			, CASE 	WHEN A.AUC_DAY = '1' THEN '일'
					WHEN A.AUC_DAY = '2' THEN '월'
					WHEN A.AUC_DAY = '3' THEN '화'
					WHEN A.AUC_DAY = '4' THEN '수'
					WHEN A.AUC_DAY = '5' THEN '목'
					WHEN A.AUC_DAY = '6' THEN '금'
					WHEN A.AUC_DAY = '7' THEN '토'
			ELSE '' END AUC_WEEK_DAY
			,B.CLNTNM
			,AGGR_CONCAT(DISTINCT A.AUC_OBJ_DSC,',') AUC_OBJ_DSC
			,AGGR_CONCAT(DISTINCT A.AUC_OBJ_DSC_NAME,',') AUC_OBJ_DSC_NAME
		FROM (
			SELECT 
				NA_BZPLC
				,AUC_OBJ_DSC
				,CASE
					 WHEN AUC_OBJ_DSC=1 THEN '송아지'
					 WHEN AUC_OBJ_DSC=2 THEN '비육우'
					 WHEN AUC_OBJ_DSC=3 THEN '번식우'
					 WHEN AUC_OBJ_DSC=0 THEN '일괄'
					 ELSE ''
				 END AUC_OBJ_DSC_NAME
				,AUC_DT 
				,TO_CHAR(TO_DATE(AUC_DT,'YYYYMMDD'),'D') AUC_DAY
			FROM TB_LA_IS_MH_AUC_QCN
			WHERE DEL_YN = 0
			UNION ALL
			SELECT 
				NA_BZPLC
				,AUC_OBJ_DSC
				,CASE
					 WHEN AUC_OBJ_DSC=1 THEN '송아지'
					 WHEN AUC_OBJ_DSC=2 THEN '비육우'
					 WHEN AUC_OBJ_DSC=3 THEN '번식우'
					 WHEN AUC_OBJ_DSC=0 THEN '일괄'
					 ELSE ''
				 END AUC_OBJ_DSC_NAME
				,AUC_DT 				
				,TO_CHAR(TO_DATE(AUC_DT,'YYYYMMDD'),'D') AUC_DAY
			FROM TB_LA_IS_MH_AUC_STN
			WHERE DEL_YN = 0
		) A
		 INNER JOIN TB_LA_IS_BM_BZLOC B ON A.NA_BZPLC = B.NA_BZPLC 
		WHERE B.NA_BZPLCNO =#{naBzPlcNo}
		<if test =" yyyymm != '' and yyyymm != null">
			AND SUBSTRING(A.AUC_DT,1,6) = #{yyyymm}
		</if>
		<if test =" searchDate != '' and searchDate != null">
			AND A.AUC_DT = #{searchDate}
		</if>
		GROUP BY A.NA_BZPLC,B.CLNTNM,A.AUC_DT,A.AUC_DAY
		ORDER BY A.AUC_DT
	</select>
	
	<insert id="insertUpdateZim" parameterType="map">
		MERGE INTO TB_LA_IS_MH_SOG_ZIM A
		USING (
			SELECT
				#{naBzPlc}        NA_BZPLC           
				, #{aucObjDsc}    AUC_OBJ_DSC      
				, #{aucDt}        AUC_DT           
				, #{oslpNo}       OSLP_NO          
				, #{loginNo}      TRMN_AMNNO       
			FROM DUAL
		) B ON (
			A.NA_BZPLC = B.NA_BZPLC
			AND A.AUC_OBJ_DSC   = B.AUC_OBJ_DSC   
			AND A.AUC_DT        = B.AUC_DT        
			AND A.OSLP_NO       = B.OSLP_NO       
			AND A.TRMN_AMNNO    = B.TRMN_AMNNO    
		)
		WHEN MATCHED THEN
			UPDATE SET 
			SBID_UPR = #{inputUpr}
			, LSCHG_DTM = SYSDATE
			, LS_CMENO = #{loginNo}
		WHEN NOT MATCHED THEN
			INSERT (
				NA_BZPLC
				, AUC_OBJ_DSC
				, AUC_DT
				, OSLP_NO
				, TRMN_AMNNO
				, AUC_PRG_SQ
				, SBID_UPR
				, DEL_YN
				, FSRG_DTM
				, FSRGMN_ENO
			)
			VALUES (
				#{naBzPlc}
				, #{aucObjDsc}
				, #{aucDt}
				, #{oslpNo}
				, #{loginNo}
				, #{aucPrgSq}
				, #{inputUpr}
				, 0
				, SYSDATE
				, #{loginNo}
			)
	</insert>
	
	<insert id="deleteZimPrice" parameterType="map">
		DELETE FROM TB_LA_IS_MH_SOG_ZIM
		WHERE  NA_BZPLC = #{naBzPlc}
		AND AUC_OBJ_DSC = TO_CHAR(#{aucObjDsc})
		AND AUC_DT = #{aucDt}
		AND OSLP_NO = #{oslpNo}
		AND TRMN_AMNNO = #{loginNo}
	</insert>
	
	<!-- 출하우 경매 결과 업데이트 -->
	<update id="updateAuctionResult" parameterType="map">
		UPDATE TB_LA_IS_MH_SOG_COW
		   SET TRMN_AMNNO = #{trmnAmnno}				/* 중도매인 번호 */
			 , LVST_AUC_PTC_MN_NO = #{lvstAucPtcMnNo}	/* 경매 참가자 번호 */
			 , SRA_SBID_AM = #{sraSbidAm}				/* 낙찰 금액 */
			 , SRA_SBID_UPR = #{sraSbidUpr}				/* 낙찰 단가 */
			 , SEL_STS_DSC = #{selStsDsc}				/* 판매상태 구분 코드 */
			<if test="maxDdlQcn != null and maxDdlQcn != ''">
				 , DDL_QCN = #{maxDdlQcn} + 1
			</if>
			 , AMNNO = #{trmnAmnno}						/* 정산자 중도매인 번호 */
		<choose>
		<when test="lschgDtm != null and lschgDtm != ''">
			 , LSCHG_DTM = #{lschgDtm}					/* 최종 변경일시 */
		</when>
		<otherwise>
			 , LSCHG_DTM = SYSDATE						/* 최종 변경일시 */
		</otherwise>
		</choose>
			 , LS_CMENO = #{lsCmeno}					/* 최종 변경자 */
		 WHERE NA_BZPLC = #{naBzPlc}		/* 사업장코드 */
		   AND AUC_OBJ_DSC = TO_CHAR(#{aucObjDsc})	/* 경매대상 구분코드 */
		   AND AUC_DT = #{aucDt}			/* 경매일자 */
		   AND OSLP_NO = #{oslpNo}			/* 원표번호 */
		   AND LED_SQNO = #{ledSqno}		/* 원장 일련번호 */
	</update>
	
	<!-- 출품 정보 리스트 -->
	<select id="selectAuctionEntry" parameterType="map" resultType="map">
		SELECT C.*
			 , CASE WHEN C.GAP_DAY = 0 THEN C.BIRTH_STR || '(' || C.GAP_MONTH || '개월)'
					ELSE C.BIRTH_STR || '(' || C.GAP_MONTH || '개월 ' || C.GAP_DAY || '일)'
			END BIRTH_FMT
		  FROM (
			SELECT A.NA_BZPLC					/* 조합 구분 코드 */
				 , A.OSLP_NO					/* 출품번호 */
				 , A.AUC_DT
				 , (SELECT C.QCN
				 	  FROM TB_LA_IS_MH_AUC_QCN C
				 	 WHERE C.NA_BZPLC = A.NA_BZPLC
				 	   AND C.AUC_DT = A.AUC_DT
				 	   AND C.AUC_OBJ_DSC = NVL(#{aucObjDsc}, C.AUC_OBJ_DSC)
				 	   AND ROWNUM = 1) AS QCN
				 , A.AUC_PRG_SQ					/* 경매순번 */
				 , A.AUC_OBJ_DSC				/* 경매대상구분코드 */
				 , A.SRA_INDV_AMNNO				/* 축산개체관리번호 */
				 , A.SRA_SRS_DSC				/* 축상축종구분코드 */
				 , A.FHS_ID_NO 					/* 농가식별번호 */
				 , A.FARM_AMNNO 				/* 농장관리번호 */
				 , (SELECT C.FTSNM
					  FROM TB_LA_IS_MM_FHS C
					 WHERE C.NA_BZPLC = A.NA_BZPLC
					   AND C.FHS_ID_NO = A.FHS_ID_NO
					   AND C.FARM_AMNNO = A.FARM_AMNNO
				 ) AS FTSNM						/* 농가명 */
				 , A.BRANDNM					/* 브랜드명 */
				 , B.BIRTH						/* 생년월일 */
				 , RTRIM(LTRIM(B.KPN_NO)) AS KPN_NO	/* KPN번호 */
				 , B.INDV_SEX_C					/* 개체성별코드 */
				 , CASE WHEN B.INDV_SEX_C = '0' THEN '없음' WHEN B.INDV_SEX_C = '1' THEN '암'
				 		WHEN B.INDV_SEX_C = '2' THEN '수' WHEN B.INDV_SEX_C = '3' THEN '거세'
				 		WHEN B.INDV_SEX_C = '4' THEN '미경산' WHEN B.INDV_SEX_C = '5' THEN '비거세'
				 		WHEN B.INDV_SEX_C = '6' THEN '프리마틴' WHEN B.INDV_SEX_C = '9' THEN '공통'
				 		ELSE '-'
				 	END AS INDV_SEX_NAME		/* 개체성별코드명 */
				 , B.MCOW_DSC 					/* 어미소구분코드*/
				 , B.MCOW_SRA_INDV_AMNNO 		/* 어미축산개체관리번호 */
				 , CASE WHEN B.MCOW_DSC = '01' THEN '기초'
				 		WHEN B.MCOW_DSC = '02' THEN '혈통'
				 		WHEN B.MCOW_DSC = '03' THEN '고등'
				 		WHEN B.MCOW_DSC = '09' THEN '미등록우'
				 		ELSE ''
				 	END AS MCOW_DSC_NM
				 , ROUND(B.MATIME) AS MATIME		/* 산차 */
				 , ROUND(A.PRNY_MTCN) AS PRNY_MTCN	/* 임신개월수 */
				 , B.SRA_INDV_PASG_QCN 			/* 계대 */
				 , B.INDV_ID_NO 				/* 계체식벌번호 */
				 , B.SRA_INDV_BRDSRA_RG_NO 		/* 축산개체종축등록번호 */
				 , B.RG_DSC 					/* 등록구분번호 */
				 , CASE WHEN B.RG_DSC = '01' THEN '기초'
				 		WHEN B.RG_DSC = '02' THEN '혈통'
				 		WHEN B.RG_DSC = '03' THEN '고등'
				 		WHEN B.RG_DSC = '09' THEN '미등록우'
				 		ELSE ''
				 	END AS RG_DSC_NM
				 , A.SRA_PDMNM
				 , A.SRA_PD_RGNNM 				/* 축산생산지역 */
				 , A.DNA_YN						/* 친자검사결과여부 */
				 , B.ANW_YN 					/* 신규여부 */
				 , ROUND(A.COW_SOG_WT) AS COW_SOG_WT	/* 우출하중량 */
				 , A.RMK_CNTN					/* 비고내용 */
				 , DECODE(A.AUC_YN,'1','11',A.SEL_STS_DSC) SEL_STS_DSC 				/* 낙유찰결과 */
				 , (SELECT D.SRA_MWMNNM 
					  FROM TB_LA_IS_MM_MWMN D
					 WHERE D.NA_BZPLC = A.NA_BZPLC
					   AND D.TRMN_AMNNO = A.TRMN_AMNNO
				 ) AS SRA_MWMNNM 				/* 낙찰자 */
				 , A.LVST_AUC_PTC_MN_NO			/* 낙찰자 참가 번호 */
				 , A.TRMN_AMNNO					/* 낙찰자 중도매인 번호 */
				 , A.SRA_SBID_UPR				/* 낙찰금액 */
				 , CASE WHEN A.AUC_OBJ_DSC = '1' THEN ROUND(A.FIR_LOWS_SBID_LMT_AM / NVL(J.CALF_AUC_ATDR_UNT_AM, 10000))
						WHEN A.AUC_OBJ_DSC = '2' THEN ROUND(A.FIR_LOWS_SBID_LMT_AM / NVL(J.NBFCT_AUC_ATDR_UNT_AM, 1))
						WHEN A.AUC_OBJ_DSC = '3' THEN ROUND(A.FIR_LOWS_SBID_LMT_AM / NVL(J.PPGCOW_AUC_ATDR_UNT_AM, 10000))
						ELSE ROUND(A.FIR_LOWS_SBID_LMT_AM / 10000)
					END AS FIR_LOWS_SBID_LMT_AM
				 , CASE WHEN A.AUC_OBJ_DSC = '1' THEN ROUND(A.LOWS_SBID_LMT_AM / NVL(J.CALF_AUC_ATDR_UNT_AM, 10000))
						WHEN A.AUC_OBJ_DSC = '2' THEN ROUND(A.LOWS_SBID_LMT_AM / NVL(J.NBFCT_AUC_ATDR_UNT_AM, 1))
						WHEN A.AUC_OBJ_DSC = '3' THEN ROUND(A.LOWS_SBID_LMT_AM / NVL(J.PPGCOW_AUC_ATDR_UNT_AM, 10000))
						ELSE ROUND(A.LOWS_SBID_LMT_AM / 10000)
					END AS LOWS_SBID_LMT_AM
				 , A.SRA_SBID_AM
				 , A.SRA_SBID_UPR
				 , D.ATDR_DTM
				 , TO_CHAR(TO_DATE(B.BIRTH,'YYYYMMDD'),'YY.MM.DD') BIRTH_STR
				 , CASE WHEN MONTHS_BETWEEN(TO_DATE(A.AUC_DT,'YYYYMMDD'), TO_DATE(B.BIRTH,'YYYYMMDD')) <![CDATA[<=]]> 4 THEN 4
						 ELSE TRUNC(MONTHS_BETWEEN(TO_DATE(A.AUC_DT,'YYYYMMDD'), TO_DATE(B.BIRTH,'YYYYMMDD')))
					 END GAP_MONTH
				 , CASE WHEN MONTHS_BETWEEN(TO_DATE(A.AUC_DT,'YYYYMMDD'), TO_DATE(B.BIRTH,'YYYYMMDD')) <![CDATA[<]]> 4 THEN 0
						 ELSE GREATEST(TO_DATE(A.AUC_DT,'YYYYMMDD') - ADD_MONTHS(TO_DATE(B.BIRTH,'YYYYMMDD'), TRUNC(MONTHS_BETWEEN(TO_DATE(A.AUC_DT,'YYYYMMDD'), TO_DATE(B.BIRTH,'YYYYMMDD')))) + 1, 0) - 1
					 END GAP_DAY
				 , A.LED_SQNO
				 , NVL(A.MODL_NO, A.AUC_PRG_SQ) AS MODL_NO
				 , TO_CHAR(A.LSCHG_DTM, 'YYYYMMDDHH24MISS') AS LSCHG_DTM
			  FROM TB_LA_IS_MH_SOG_COW A
			  LEFT OUTER JOIN TB_LA_IS_MM_INDV B
				ON (
					A.NA_BZPLC = B.NA_BZPLC
					AND
					A.SRA_INDV_AMNNO = B.SRA_INDV_AMNNO 
					AND
					A.SRA_SRS_DSC = B.SRA_SRS_DSC 
				 )
			  LEFT OUTER JOIN TB_LA_IS_MM_ENV_EST J
				ON ( A.NA_BZPLC = J.NA_BZPLC )
			  LEFT JOIN (
					SELECT
						ROW_NUMBER() OVER(PARTITION BY E.NA_BZPLC, E.AUC_OBJ_DSC , E.AUC_DT, E.OSLP_NO ,E.AUC_PRG_SQ , E.TRMN_AMNNO , E.LVST_AUC_PTC_MN_NO ORDER BY E.ATDR_DTM DESC) AS N_NUM 
						,E.NA_BZPLC
						,E.AUC_OBJ_DSC
						,E.AUC_DT
						,E.OSLP_NO
						,E.TRMN_AMNNO
						,E.LVST_AUC_PTC_MN_NO
						,E.ATDR_AM
						,E.AUC_PRG_SQ 
						,E.ATDR_DTM
					FROM
						TB_LA_IS_MH_ATDR_LOG E
					WHERE 1=1
					AND E.NA_BZPLC = #{naBzplc}
					<choose>
						<when test="searchDate != null and searchDate != ''">
						   AND E.AUC_DT = #{searchDate}
						</when>
						<otherwise>
						   AND E.AUC_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
						</otherwise>
					</choose>
				 ) D 
				ON (
					A.NA_BZPLC = D.NA_BZPLC
					AND A.AUC_OBJ_DSC = D.AUC_OBJ_DSC
					AND A.AUC_DT = D.AUC_DT
					AND A.OSLP_NO = D.OSLP_NO
					AND A.AUC_PRG_SQ = D.AUC_PRG_SQ 
					AND A.TRMN_AMNNO = D.TRMN_AMNNO
					AND A.LVST_AUC_PTC_MN_NO = D.LVST_AUC_PTC_MN_NO
					AND A.SRA_SBID_UPR = D.ATDR_AM
					AND D.N_NUM = 1
				)
			 WHERE A.NA_BZPLC = #{naBzplc}
		<if test="aucObjDsc != null and aucObjDsc != ''">
			   AND A.AUC_OBJ_DSC = DECODE(#{aucObjDsc}, '0', A.AUC_OBJ_DSC, #{aucObjDsc})
		</if>
		<choose>
			<when test="searchDate != null and searchDate != ''">
			   AND A.AUC_DT = #{searchDate}
			</when>
			<otherwise>
			   AND A.AUC_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
			</otherwise>
		</choose>
		<if test="stAucNo !=null and !stAucNo.equals('') and edAucNo !=null and !edAucNo.equals('')">
			   AND A.AUC_PRG_SQ <![CDATA[>=]]> #{stAucNo}
			   AND A.AUC_PRG_SQ <![CDATA[<=]]> #{edAucNo}
		</if>
			 ) C
		 ORDER BY C.AUC_DT DESC,  C.AUC_PRG_SQ ASC
	</select>
	
	<!-- 나의 찜 정보 - api요청 -->
	<select id="selectMyFavoriteInfo" parameterType="map" resultType="map">
		SELECT SBID_UPR
		  FROM TB_LA_IS_MH_SOG_ZIM
		 WHERE NA_BZPLC = #{naBzplc}
		   AND AUC_OBJ_DSC = TO_CHAR(#{aucObjDsc})
		   AND TRMN_AMNNO = #{trmnAmnno}
		<choose>
		<when test="aucDt != null and aucDt != ''">
		   AND AUC_DT = #{aucDt}
		</when>
		<otherwise>
		   AND AUC_DT = TO_CHAR(SYSDATE, 'YYYYMMDD')
		</otherwise>
		</choose>
		   AND AUC_PRG_SQ = #{aucPrgSq}
		   AND DEL_YN = '0'
	</select>
	
	<!-- App 버전 정보 -->
	<select id="selectAppVersionInfo" parameterType="map" resultType="map">
		SELECT 
			APP_VERSION_ID
			, OS_TYPE
			, DEPLOY_DATE
			, MAX_VERSION
			, MIN_VERSION
			, FSRG_DTM
			, FSRGMN_ENO
			, LSCHG_DTM
			, LS_CMENO
			, NET_HOST
			, NET_PORT
		FROM TB_APP_VERSION
		WHERE OS_TYPE = #{osType}
	</select>
	
	<!-- 나의 구매현황 -->
	<select id="selectMyBuyList" parameterType="map" resultType="map">
		SELECT B.NA_BZPLC
			 , B.AUC_OBJ_DSC
			 , B.N_CNT
			 , C.CLNTNM
			 , C.LAT
			 , C.LNG 
		  FROM (
			SELECT A.NA_BZPLC
				 , A.AUC_OBJ_DSC
				 , A.TRMN_AMNNO
				 , A.N_CNT
				 , RANK() OVER (PARTITION BY A.NA_BZPLC ORDER BY A.N_CNT DESC, A.TRMN_AMNNO ASC) AS N_RANK
			  FROM (
					SELECT NA_BZPLC
					 , AUC_OBJ_DSC
					 , TRMN_AMNNO 
					 , COUNT(*) AS N_CNT
				  FROM TB_LA_IS_MH_SOG_COW
				 WHERE TRMN_AMNNO IS NOT NULL
				<if test="searchAucObjDsc != null and searchAucObjDsc != ''">
				   AND AUC_OBJ_DSC = TO_CHAR(#{searchAucObjDsc})
				</if>
				<if test="searchStDt != null and searchStDt != '' and searchEnDt != null and searchEnDt != ''">
				   AND AUC_DT BETWEEN REPLACE(#{searchStDt}, '.', '') AND REPLACE(#{searchEnDt}, '.', '')
				</if>
				 GROUP BY NA_BZPLC, AUC_OBJ_DSC, TRMN_AMNNO
			) A
		) B
		INNER JOIN TB_LA_IS_BM_BZLOC C
		  ON ( C.NA_BZPLC = B.NA_BZPLC)
		WHERE B.N_RANK = 1
	</select>
	
	<!-- 나의 평균 응찰단가 -->
	<select id="selectMyAvgBidAmtInfo" parameterType="map" resultType="map">
		SELECT A.AUC_MONTH
			 , ROUND(AVG(A.SRA_SBID_AM)) AS AVG_SRA_SBID_AM
			 , ROUND(AVG(A.COW_SOG_WT)) AS AVG_COW_SOG_WT
			 , ROUND(AVG(A.AVG_SBID_AM)) AS AVG_SBID_AM
		  FROM (
			SELECT SUBSTR(AUC_DT, 1, 6) AS AUC_MONTH
				 , SRA_SBID_AM
				 , COW_SOG_WT
				 , CASE WHEN COW_SOG_WT <![CDATA[<=]]> 0 THEN 1
						ELSE SRA_SBID_AM/COW_SOG_WT
					END AS AVG_SBID_AM
			  FROM TB_LA_IS_MH_SOG_COW
			 WHERE SEL_STS_DSC = '22'
			   AND COW_SOG_WT <![CDATA[>]]> 0
			<if test="searchAucObjDsc != null and searchAucObjDsc != ''">
			   AND AUC_OBJ_DSC = TO_CHAR(#{searchAucObjDsc})
			</if>
			<if test="searchStDt != null and searchStDt != '' and searchEnDt != null and searchEnDt != ''">
			   AND AUC_DT BETWEEN REPLACE(#{searchStDt}, '.', '') AND REPLACE(#{searchEnDt}, '.', '')
			</if>
			 ) A
		 GROUP BY A.AUC_MONTH
	</select>
	
	<!-- 경매 가능 지점 리스트 -->
	<select id="selectAuctionBizList" parameterType="map" resultType="map">
		SELECT NA_BZPLCNO
			 , NA_BZPLCLOC
			 , CLNTNM
			 , NA_BZPLC
			 , AREAORD
			 , AREANM
			 , AUC_DSC
			 , LAT
			 , LNG
			 , AUC_YN
			 , DEL_YN
			 , RMK_CNTN
			 , TEL_NO
		  FROM TB_LA_IS_BM_BZLOC
		 WHERE AUC_YN = '1'
		   AND DEL_YN = '0'
	</select>
	
	<!-- 반경 2km내 조합 검색 -->
	<select id="selectNearestBranchInfo" parameterType="map" resultType="map">
		SELECT NA_BZPLCNO
			 , NA_BZPLCLOC
			 , CLNTNM
			 , NA_BZPLC
			 , 'Y' AS AUC_YN
			 , LAT
			 , LNG
			 , (6371*ACOS(COS(RADIANS(#{lat}))*COS(RADIANS(LAT))*COS(RADIANS(LNG)-RADIANS(#{lng}))+SIN(RADIANS(#{lat}))*SIN(RADIANS(LAT))))
		    AS DISTANCE
		FROM TB_LA_IS_BM_BZLOC
		WHERE LAT IS NOT NULL 
		  AND LNG IS NOT NULL
		  AND DEL_YN = '0'
		  AND AUC_YN = '1'
	<choose>
	<when test="distance != null and distance != ''">
		HAVING DISTANCE <![CDATA[<=]]> #{distance}
	</when>
	<otherwise>
		HAVING DISTANCE <![CDATA[<=]]> 2
	</otherwise>
	</choose>
		ORDER BY DISTANCE
	</select>
	
	<!-- 카카오 커넥트 라이브 서비스 정보 -->
	<select id="selectKakaoServiceInfo" parameterType="map" resultType="map">
		SELECT KKO_SVC_ID
			 , KKO_SVC_KEY
			 , KKO_SVC_CNT
			 , NET_HOST
			 , NET_PORT
			 , WEB_PORT
		  FROM TB_LA_IS_BM_BZLOC
		 WHERE NA_BZPLC = #{naBzplc}
	</select>
	
	<select id="selectTestUserList" parameterType="map" resultType="map">
		SELECT B.*
		  FROM (
				SELECT A.*
					 , ROW_NUMBER() OVER(ORDER BY SRA_MWMNNM ASC) AS N_NUM
				  FROM TB_LA_IS_MM_MWMN A
				 WHERE NA_BZPLC = #{naBzplc}
				   AND EXISTS ( SELECT 1 FROM TB_LA_IS_MH_AUC_ENTR B WHERE B.NA_BZPLC = A.NA_BZPLC AND B.TRMN_AMNNO = A.TRMN_AMNNO AND B.AUC_DT = #{aucDt} AND B.AUC_OBJ_DSC = TO_CHAR(#{aucObjDsc}))
		) B
		 WHERE B.N_NUM <![CDATA[<=]]> NVL(#{limitCnt}, 10)
	</select>
	
	<!-- 나의 참가 정보 리스트 -->
	<select id="selectMyEntryList" parameterType="map" resultType="map">
		select NA_BZPLC
			 , AUC_DT
			 , AUC_OBJ_DSC
			 , LVST_AUC_PTC_MN_NO
			 , TRMN_AMNNO
			 , TR_DFN_YN
			 , AUC_ENTR_GRN_AM
			 , RTRN_YN
			 , TMS_YN
			 , DEL_YN
			 , FSRG_DTM
			 , FSRGMN_ENO
			 , LSCHG_DTM
			 , LS_CMENO
		  FROM TB_LA_IS_MH_AUC_ENTR
		 WHERE NA_BZPLC = #{naBzplc}
		   AND AUC_DT = TO_CHAR(SYSDATE, 'YYYYMMDD')		 
		   <if test="aucObjDsc != null">
			   AND AUC_OBJ_DSC IN (
				   <foreach item="item" collection="aucObjDsc" separator=",">
		        		#{item}
				  </foreach>
			  )
		  </if>
		   AND TRMN_AMNNO = #{trmnAmnno}
		   AND ROWNUM = 1
		   ORDER BY FSRG_DTM DESC
	</select>
	
	<select id="selectCowInfo" parameterType="map" resultType="map">
		SELECT A.NA_BZPLC					/* 조합 구분 코드 */
			 , A.OSLP_NO					/* 출품번호 */
			 , (SELECT C.QCN
			 	  FROM TB_LA_IS_MH_AUC_QCN C
			 	 WHERE C.NA_BZPLC = A.NA_BZPLC
			 	   AND C.AUC_DT = A.AUC_DT
			 	   AND C.AUC_OBJ_DSC = A.AUC_OBJ_DSC) AS QCN
			 , (SELECT D.AUC_OBJ_DSC
			 	  FROM TB_LA_IS_MH_AUC_QCN D
			 	 WHERE D.NA_BZPLC = A.NA_BZPLC
			 	   AND D.AUC_DT = A.AUC_DT
			 	   AND DECODE(D.AUC_OBJ_DSC,'0',A.AUC_OBJ_DSC,D.AUC_OBJ_DSC) = A.AUC_OBJ_DSC) AS QCN_AUC_OBJ_DSC
			 , A.AUC_PRG_SQ					/* 경매순번 */
			 , A.AUC_OBJ_DSC				/* 경매대상구분코드 */
			 , A.SRA_INDV_AMNNO				/* 축산개체관리번호 */
			 , A.SRA_SRS_DSC				/* 축상축종구분코드 */
			 , A.FHS_ID_NO 					/* 농가식별번호 */
			 , A.FARM_AMNNO 				/* 농장관리번호 */
			 , (SELECT C.FTSNM
				  FROM TB_LA_IS_MM_FHS C
				 WHERE C.NA_BZPLC = A.NA_BZPLC
				   AND C.FHS_ID_NO = A.FHS_ID_NO
				   AND C.FARM_AMNNO = A.FARM_AMNNO
			 ) AS FTSNM						/* 농가명 */
			 , A.BRANDNM					/* 브랜드명 */
			 , B.BIRTH						/* 생년월일 */
			 , RTRIM(LTRIM(B.KPN_NO)) AS KPN_NO	/* KPN번호 */
			 , B.INDV_SEX_C					/* 개체성별코드 */
			 , CASE WHEN B.INDV_SEX_C = '0' THEN '없음' WHEN B.INDV_SEX_C = '1' THEN '암'
			 		WHEN B.INDV_SEX_C = '2' THEN '수' WHEN B.INDV_SEX_C = '3' THEN '거세'
			 		WHEN B.INDV_SEX_C = '4' THEN '미경산' WHEN B.INDV_SEX_C = '5' THEN '비거세'
			 		WHEN B.INDV_SEX_C = '6' THEN '프리마틴' WHEN B.INDV_SEX_C = '9' THEN '공통'
			 		ELSE '-'
			 	END AS INDV_SEX_NAME		/* 개체성별코드명 */
			 , B.MCOW_DSC 					/* 어미소구분코드*/
			 , B.MCOW_SRA_INDV_AMNNO 		/* 어미축산개체관리번호 */
			 , CASE WHEN B.MCOW_DSC = '01' THEN '기초'
			 		WHEN B.MCOW_DSC = '02' THEN '혈통'
			 		WHEN B.MCOW_DSC = '03' THEN '고등'
			 		WHEN B.MCOW_DSC = '09' THEN '미등록우'
			 		ELSE '-'
			 	END AS MCOW_DSC_NM
			 , ROUND(NVL(B.MATIME, 0)) AS MATIME		/* 산차 */
			 , ROUND(NVL(A.PRNY_MTCN, 0)) AS PRNY_MTCN	/* 임신개월수 */
			 , B.SRA_INDV_PASG_QCN 			/* 계대 */
			 , B.INDV_ID_NO 				/* 계체식벌번호 */
			 , B.SRA_INDV_BRDSRA_RG_NO 		/* 축산개체종축등록번호 */
			 , B.RG_DSC 					/* 등록구분번호 */
			 , CASE WHEN B.RG_DSC = '01' THEN '기초'
			 		WHEN B.RG_DSC = '02' THEN '혈통'
			 		WHEN B.RG_DSC = '03' THEN '고등'
			 		WHEN B.RG_DSC = '09' THEN '미등록우'
			 		ELSE ''
			 	END AS RG_DSC_NM
			 , A.SRA_PDMNM
			 , A.SRA_PD_RGNNM 				/* 축산생산지역 */
			 , A.DNA_YN						/* 친자검사결과여부 */
			 , B.ANW_YN 					/* 신규여부 */
			 , NVL(ROUND(A.COW_SOG_WT),0) AS COW_SOG_WT	/* 우출하중량 */
			 , ROUND(A.FIR_LOWS_SBID_LMT_AM / 10000) AS FIR_LOWS_SBID_LMT_AM_B		/* 최초최저낙찰한도금액 */
			 , ROUND(A.LOWS_SBID_LMT_AM / 10000) AS LOWS_SBID_LMT_AM_B				/* 최저낙찰한도금액 */
			 , A.RMK_CNTN					/* 비고내용 */
			 , A.SEL_STS_DSC 				/* 낙유찰결과 */
			 , A.LVST_AUC_PTC_MN_NO			/* 낙찰자 참가 번호 */
			 , A.TRMN_AMNNO					/* 낙찰자 중도매인 번호 */
			 , A.SRA_SBID_UPR				/* 낙찰금액 */
			 , ROUND(A.SRA_SBID_AM / 10000) AS SRA_SBID_AM_B		/* 낙찰금액 */
			 , SUBSTRING(A.SRA_INDV_AMNNO, LENGTH(A.SRA_INDV_AMNNO)-4,4) || '-' || SUBSTRING(A.SRA_INDV_AMNNO, LENGTH(A.SRA_INDV_AMNNO), 1) AS SRA_INDV_AMNNO_FORMAT
			 , NVL(A.MODL_NO, A.AUC_PRG_SQ) AS MODL_NO
			 , CASE WHEN A.AUC_OBJ_DSC = '1' THEN ROUND(A.FIR_LOWS_SBID_LMT_AM / NVL(C.CALF_AUC_ATDR_UNT_AM, 10000))
					WHEN A.AUC_OBJ_DSC = '2' THEN ROUND(A.FIR_LOWS_SBID_LMT_AM / NVL(C.NBFCT_AUC_ATDR_UNT_AM, 1))
					WHEN A.AUC_OBJ_DSC = '3' THEN ROUND(A.FIR_LOWS_SBID_LMT_AM / NVL(C.PPGCOW_AUC_ATDR_UNT_AM, 10000))
					ELSE ROUND(A.FIR_LOWS_SBID_LMT_AM / 10000)
				END AS FIR_LOWS_SBID_LMT_AM
			 , CASE WHEN A.AUC_OBJ_DSC = '1' THEN ROUND(A.LOWS_SBID_LMT_AM / NVL(C.CALF_AUC_ATDR_UNT_AM, 10000))
					WHEN A.AUC_OBJ_DSC = '2' THEN ROUND(A.LOWS_SBID_LMT_AM / NVL(C.NBFCT_AUC_ATDR_UNT_AM, 1))
					WHEN A.AUC_OBJ_DSC = '3' THEN ROUND(A.LOWS_SBID_LMT_AM / NVL(C.PPGCOW_AUC_ATDR_UNT_AM, 10000))
					ELSE ROUND(A.LOWS_SBID_LMT_AM / 10000)
				END AS LOWS_SBID_LMT_AM
			 , CASE WHEN A.AUC_OBJ_DSC = '1' THEN ROUND(A.SRA_SBID_AM / NVL(C.CALF_AUC_ATDR_UNT_AM, 10000))
					WHEN A.AUC_OBJ_DSC = '2' THEN ROUND(A.SRA_SBID_AM / NVL(C.NBFCT_AUC_ATDR_UNT_AM, 1))
					WHEN A.AUC_OBJ_DSC = '3' THEN ROUND(A.SRA_SBID_AM / NVL(C.PPGCOW_AUC_ATDR_UNT_AM, 10000))
					ELSE ROUND(A.SRA_SBID_AM / 10000)
				END AS SRA_SBID_AM
			 , CASE WHEN A.AUC_OBJ_DSC = '1' THEN ROUND(NVL(C.CALF_AUC_ATDR_UNT_AM, 10000))
					WHEN A.AUC_OBJ_DSC = '2' THEN ROUND(NVL(C.NBFCT_AUC_ATDR_UNT_AM, 1))
					WHEN A.AUC_OBJ_DSC = '3' THEN ROUND(NVL(C.PPGCOW_AUC_ATDR_UNT_AM, 10000))
					ELSE ROUND(10000)
				END AS DIVISION_PRICE
			 , A.PPGCOW_FEE_DSC
			 , A.PRNY_YN
			 , A.LED_SQNO
			 , A.LVST_MKT_TRPL_AMNNO		/* 가축시장거래처관리번호 */
		  FROM TB_LA_IS_MH_SOG_COW A
		  LEFT OUTER JOIN TB_LA_IS_MM_INDV B
			ON (
				A.NA_BZPLC = B.NA_BZPLC
				AND
				A.SRA_INDV_AMNNO = B.SRA_INDV_AMNNO 
				AND
				A.SRA_SRS_DSC = B.SRA_SRS_DSC 
			 )
		  LEFT OUTER JOIN TB_LA_IS_MM_ENV_EST C
			ON ( A.NA_BZPLC = C.NA_BZPLC )
		 WHERE A.NA_BZPLC = #{naBzplc}
		   AND A.AUC_DT = #{aucDt}
		<if test="aucObjDsc != null and aucObjDsc != ''">
		   AND A.AUC_OBJ_DSC = TO_CHAR(#{aucObjDsc})
		</if>
		<if test="oslpNo != null and oslpNo != ''">
		   AND A.OSLP_NO = #{oslpNo}
		</if>
		<if test="ledSqno != null and ledSqno != ''">
		   AND A.LED_SQNO = #{ledSqno}
		</if>
		<if test="aucPrgSq != null and aucPrgSq != ''">
		   AND A.AUC_PRG_SQ = #{aucPrgSq}
		</if>
		<if test="regType != null and regType != '' and regType == 'I'.toString()">
		   AND A.AUC_OBJ_DSC = '3'
		</if>
	</select>
	
	<!-- 경매결과 업데이트 -->
	<update id="updateCowInfo" parameterType="map">
		<if test="regType != null and regType != ''">
			UPDATE TB_LA_IS_MH_SOG_COW
			   SET LSCHG_DTM = SYSDATE
				 , LS_CMENO = #{regUserId}
			<choose>
			<when test="regType == 'W'.toString()">
				 , COW_SOG_WT = #{cowSogWt}
				 , RMK_CNTN = #{rmkCntn}
			</when>
			<when test="regType == 'AW'.toString()">
				 , COW_SOG_WT = #{cowSogWt}
			</when>
			<when test="regType == 'N'.toString()">
				 , MODL_NO = #{modlNo}
			</when>
			<when test="regType == 'L'.toString() or regType == 'AL'.toString()">
				 , FIR_LOWS_SBID_LMT_AM = #{firLowsSbidLmtAm} * (SELECT CASE WHEN #{aucObjDsc} = '1' THEN CALF_AUC_ATDR_UNT_AM
																			 WHEN #{aucObjDsc} = '2' THEN NBFCT_AUC_ATDR_UNT_AM
																			 WHEN #{aucObjDsc} = '3' THEN PPGCOW_AUC_ATDR_UNT_AM
																			 ELSE 10000 END
																   FROM TB_LA_IS_MM_ENV_EST
																  WHERE NA_BZPLC = #{naBzplc})
				 , LOWS_SBID_LMT_AM = #{firLowsSbidLmtAm} * (SELECT CASE WHEN #{aucObjDsc} = '1' THEN CALF_AUC_ATDR_UNT_AM
																		 WHEN #{aucObjDsc} = '2' THEN NBFCT_AUC_ATDR_UNT_AM
																		 WHEN #{aucObjDsc} = '3' THEN PPGCOW_AUC_ATDR_UNT_AM
																		 ELSE 10000 END
															   FROM TB_LA_IS_MM_ENV_EST
															  WHERE NA_BZPLC = #{naBzplc})
			</when>
			<when test="regType == 'I'.toString()">
				<if test ="sraPdmnm != null and sraPdmnm != ''">
					, SRA_PDMNM = #{sraPdmnm}
				</if>
				<if test="lvstMktTrplAmnno != null and lvstMktTrplAmnno != ''">
					, LVST_MKT_TRPL_AMNNO = #{lvstMktTrplAmnno}
				</if>
				 , PPGCOW_FEE_DSC = #{ppgcowFeeDsc}
				 , PRNY_MTCN = #{prnyMtcn}
				 , RMK_CNTN = #{rmkCntn}
			</when>
			<when test="regType == 'S'.toString()">
				<choose>
					<when test ="selStsDsc == '22'">
						, SRA_SBID_UPR = #{sraSbidUpr}
						, LVST_AUC_PTC_MN_NO = #{lvstAucPtcMnNo}
						, TRMN_AMNNO = #{trmnAmnno}
					</when>
					<otherwise>
						, SRA_SBID_UPR = 0
						, SRA_SBID_AM = 0
						, LVST_AUC_PTC_MN_NO = NULL
						, TRMN_AMNNO = NULL
					</otherwise>
				</choose>
				, SEL_STS_DSC = #{selStsDsc}				
			</when>
			</choose>
			 WHERE NA_BZPLC = #{naBzplc}
			   AND AUC_DT = #{aucDt}
			   AND AUC_OBJ_DSC = TO_CHAR(#{aucObjDsc})
			   AND OSLP_NO = #{oslpNo}
			   AND LED_SQNO = #{ledSqno}
		</if>
	</update>
	
	<update id="updateNoticeReadCnt" parameterType="map">
			UPDATE TB_LA_IS_MM_BLBD
			   SET LSCHG_DTM = SYSDATE
				 , LS_CMENO = 'SYSTEM'
				 , BBRD_INQ_CN = NVL(BBRD_INQ_CN,0) +1
			 WHERE 1=1
	        	<choose>
	        		<when test="blbdDsc == '3'.toString()">        		
	            		AND NA_BZPLC = '0000000000000' 
	        		</when>
	        		<otherwise>
	            		AND NA_BZPLC = #{johpCd} 
	        		</otherwise>
	        	</choose>
			   AND BBRD_SQNO = #{seqNo}
               AND BLBD_DSC = #{blbdDsc}
	</update>	
	
	<!-- 기등록된 계류대번호 초기화(0) -->
	<update id="updateCowInfoForModlNo" parameterType="map">
		<if test="regType != null and regType != ''">
			UPDATE TB_LA_IS_MH_SOG_COW
			   SET LSCHG_DTM = SYSDATE
				 , LS_CMENO = #{regUserId}
				 , MODL_NO = 0
			 WHERE NA_BZPLC = #{naBzplc}
			   AND AUC_DT = #{aucDt}
			   AND NVL(MODL_NO,AUC_PRG_SQ) = #{modlNo}
		</if>
	</update>

	<!-- 응찰로그 리스트 -->
	<select id="selectBidLogList" parameterType="map" resultType="map">
		SELECT 
			A.AUC_PRG_SQ 
			,A.AUC_DT 
			, TO_CHAR(TO_DATE(A.AUC_DT,'YYYYMMDD'),'YYYY.MM.DD') AUC_DT_STR
			,B.INDV_SEX_C 
			, A.SRA_INDV_AMNNO         
			, SUBSTRING(A.SRA_INDV_AMNNO,LENGTH(A.SRA_INDV_AMNNO)-4,5) SRA_INDV_AMNNO_STR
			, SUBSTRING(A.SRA_INDV_AMNNO,LENGTH(A.SRA_INDV_AMNNO)-4,4) || '-' || SUBSTRING(A.SRA_INDV_AMNNO, LENGTH(A.SRA_INDV_AMNNO), 1) AS SRA_INDV_AMNNO_FORMAT
			, CASE
				WHEN B.INDV_SEX_C = 0 THEN '없음'		
				WHEN B.INDV_SEX_C = 1 THEN '암'		
				WHEN B.INDV_SEX_C = 2 THEN '수'		
				WHEN B.INDV_SEX_C = 3 THEN '거세'		
				WHEN B.INDV_SEX_C = 4 THEN '미경산'		
				WHEN B.INDV_SEX_C = 5 THEN '비거세'		
				WHEN B.INDV_SEX_C = 6 THEN '프리마틴'		
				WHEN B.INDV_SEX_C = 9 THEN '공통'
				ELSE '없음'
			END INDV_SEX_C_NAME
			,A.LOWS_SBID_LMT_AM 
			,A.LVST_AUC_PTC_MN_NO 
			,C.TRMN_AMNNO
			,C.ATDR_AM 
			, C.ATDR_AM/10000 ATDR_UPR
			,C.ATDR_DTM 
			, A.LOWS_SBID_LMT_AM
			 , CASE WHEN A.AUC_OBJ_DSC = '1' THEN ROUND(A.LOWS_SBID_LMT_AM / NVL(J.CALF_AUC_ATDR_UNT_AM, 10000))
					WHEN A.AUC_OBJ_DSC = '2' THEN ROUND(A.LOWS_SBID_LMT_AM / NVL(J.NBFCT_AUC_ATDR_UNT_AM, 1))
					WHEN A.AUC_OBJ_DSC = '3' THEN ROUND(A.LOWS_SBID_LMT_AM / NVL(J.PPGCOW_AUC_ATDR_UNT_AM, 10000))
					ELSE ROUND(A.LOWS_SBID_LMT_AM / 10000)
				END AS LOWS_SBID_LMT_UPR
			, A.SRA_SBID_AM
			, A.SRA_SBID_UPR
			, A.COW_SOG_WT
			, DECODE(#{searchTrmnAmnNo},A.TRMN_AMNNO,'본인낙찰','-') SEL_STS_DSC_NAME
		FROM (
			SELECT
				A.NA_BZPLC
				, A.AUC_OBJ_DSC
				, A.AUC_DT
				, A.OSLP_NO
				, A.TRMN_AMNNO
				, A.LVST_AUC_PTC_MN_NO
				, A.AUC_PRG_SQ
				, A.ATDR_AM
				, A.ATDR_DTM
				, ROW_NUMBER() OVER(PARTITION BY A.NA_BZPLC,A.AUC_OBJ_DSC,A.AUC_DT,A.OSLP_NO,A.AUC_PRG_SQ,A.TRMN_AMNNO ORDER BY A.ATDR_DTM DESC) RNUM
			FROM TB_LA_IS_MH_ATDR_LOG A
			INNER JOIN TB_LA_IS_BM_BZLOC B ON A.NA_BZPLC = B.NA_BZPLC
			WHERE RG_SQNO NOT IN (0,99999999)
	        <if test="naBzPlcNo != null and naBzPlcNo != ''">
				AND B.NA_BZPLCNO = #{naBzPlcNo}
			</if>
	        <if test="naBzplc != null and naBzplc != ''">
				AND A.NA_BZPLC = #{naBzplc}
			</if>
	        <if test="searchAucObjDsc != null and searchAucObjDsc != ''">
				AND A.AUC_OBJ_DSC = #{searchAucObjDsc}
			</if>
			AND AUC_DT = #{searchDate}
			AND TRMN_AMNNO = #{searchTrmnAmnNo}
		) C
		INNER JOIN TB_LA_IS_MH_SOG_COW A ON A.NA_BZPLC = C.NA_BZPLC
										AND A.AUC_OBJ_DSC = C.AUC_OBJ_DSC
										AND A.AUC_DT = C.AUC_DT
										AND A.OSLP_NO = C.OSLP_NO
										AND A.AUC_PRG_SQ = C.AUC_PRG_SQ
		LEFT JOIN TB_LA_IS_MM_INDV B ON A.NA_BZPLC = B.NA_BZPLC 
										AND A.SRA_SRS_DSC  = B.SRA_SRS_DSC
										AND A.SRA_INDV_AMNNO = B.SRA_INDV_AMNNO
		LEFT OUTER JOIN TB_LA_IS_MM_ENV_EST J
		  ON ( A.NA_BZPLC = J.NA_BZPLC )
		WHERE C.RNUM = 1
		AND C.ATDR_AM != 0
        <if test="searchTxt != null and searchTxt != ''">				
            AND (
            	SUBSTRING(A.SRA_INDV_AMNNO,LENGTH(A.SRA_INDV_AMNNO)-4,4 ) LIKE '%' || #{searchTxt} ||'%'
            )
		</if>
		ORDER BY A.AUC_PRG_SQ ASC
	</select>
	
	<!-- 응찰내역 통계 -->
	<select id="selectBidLogListCnt" parameterType="map" resultType="map">
		SELECT 
			COUNT(B.INDV_SEX_C) TOT_CNT
			, COUNT(DECODE(B.INDV_SEX_C,1,1,NULL)) W_CNT
			, COUNT(DECODE(B.INDV_SEX_C,2,1,NULL)) M_CNT
			, COUNT(DECODE(B.INDV_SEX_C,3,1,NULL)) NEUTER_CNT
			, COUNT(DECODE(B.INDV_SEX_C,4,1,NULL)) NOT_BIRTH_CNT
			, COUNT(DECODE(B.INDV_SEX_C,5,1,NULL)) NOT_NEUTER_CNT
			, COUNT(DECODE(B.INDV_SEX_C,6,1,NULL)) FREEMARTIN_CNT
			, COUNT(DECODE(B.INDV_SEX_C,9,1,NULL)) COMMON_CNT
		FROM (
			SELECT
				A.NA_BZPLC
				, A.AUC_OBJ_DSC
				, A.AUC_DT
				, A.OSLP_NO
				, A.TRMN_AMNNO
				, A.LVST_AUC_PTC_MN_NO
				, A.AUC_PRG_SQ
				, A.ATDR_AM
				, A.ATDR_DTM
				, ROW_NUMBER() OVER(PARTITION BY A.NA_BZPLC,A.AUC_OBJ_DSC,A.AUC_DT,A.OSLP_NO,A.AUC_PRG_SQ,A.TRMN_AMNNO ORDER BY A.ATDR_DTM DESC) RNUM
			FROM TB_LA_IS_MH_ATDR_LOG A
			INNER JOIN TB_LA_IS_BM_BZLOC B ON A.NA_BZPLC = B.NA_BZPLC
			WHERE RG_SQNO NOT IN (0,99999999)
	        <if test="naBzPlcNo != null and naBzPlcNo != ''">
				AND B.NA_BZPLCNO = #{naBzPlcNo}
			</if>
	        <if test="naBzplc != null and naBzplc != ''">
				AND A.NA_BZPLC = #{naBzplc}
			</if>
	        <if test="searchAucObjDsc != null and searchAucObjDsc != ''">
				AND A.AUC_OBJ_DSC=#{searchAucObjDsc}
	        </if>
			AND AUC_DT = #{searchDate}
			AND TRMN_AMNNO = #{searchTrmnAmnNo}
		) C
		INNER JOIN TB_LA_IS_MH_SOG_COW A ON A.NA_BZPLC = C.NA_BZPLC
										AND A.AUC_OBJ_DSC = C.AUC_OBJ_DSC
										AND A.AUC_DT = C.AUC_DT
										AND A.OSLP_NO = C.OSLP_NO
										AND A.AUC_PRG_SQ = C.AUC_PRG_SQ
		INNER JOIN TB_LA_IS_MM_INDV B ON A.NA_BZPLC = B.NA_BZPLC 
										AND A.SRA_SRS_DSC  = B.SRA_SRS_DSC
										AND A.SRA_INDV_AMNNO = B.SRA_INDV_AMNNO
		WHERE C.RNUM = 1
		AND C.ATDR_AM != 0
        <if test="searchTxt != null and searchTxt != ''">
            AND (
            	SUBSTRING(A.SRA_INDV_AMNNO,LENGTH(A.SRA_INDV_AMNNO)-4,4 ) LIKE '%' || #{searchTxt} ||'%'
            )
        </if>	
	</select>	

	<!-- 구매내역 통계 -->
	<select id="selectTotSoldPrice" parameterType="map" resultType="map">	
		SELECT 
			T.NA_BZPLC 
			, T.AUC_DT
			, SUM(T.SRA_SBID_AM) SRA_SBID_AM
			, SUM(T.SRA_SBID_AM_SEX_W) SRA_SBID_AM_SEX_W
			, SUM(T.SRA_SBID_AM_SEX_M) SRA_SBID_AM_SEX_M
			, SUM(T.SRA_SBID_AM_SEX_ETC) SRA_SBID_AM_SEX_ETC
		FROM (
			SELECT 
				A.NA_BZPLC 
				, A.AUC_DT
				, NVL(A.SRA_SBID_AM,0) SRA_SBID_AM
				, CASE WHEN C.INDV_SEX_C = 1 THEN NVL(A.SRA_SBID_AM,0) ELSE 0 END SRA_SBID_AM_SEX_W /* 전체 암컷 출장우 */
				, CASE WHEN C.INDV_SEX_C = 2 THEN NVL(A.SRA_SBID_AM,0) ELSE 0 END SRA_SBID_AM_SEX_M /* 전체 수컷 출장우 */
				, CASE WHEN C.INDV_SEX_C != 2 AND C.INDV_SEX_C != 1 THEN NVL(A.SRA_SBID_AM,0) ELSE 0 END SRA_SBID_AM_SEX_ETC /* 전체 기타 출장우 */
				, NVL(A.SRA_SBID_UPR,0) SRA_SBID_UPR
			FROM TB_LA_IS_MH_SOG_COW A
			INNER JOIN TB_LA_IS_BM_BZLOC B ON A.NA_BZPLC = B.NA_BZPLC
			LEFT JOIN TB_LA_IS_MM_INDV C ON A.NA_BZPLC = C.NA_BZPLC 
		        							AND A.SRA_SRS_DSC  = C.SRA_SRS_DSC
											AND A.SRA_INDV_AMNNO = C.SRA_INDV_AMNNO											
			WHERE 1=1 
	        <if test="naBzPlcNo != null and naBzPlcNo != ''">
				AND B.NA_BZPLCNO = #{naBzPlcNo}
			</if>
	        <if test="naBzplc != null and naBzplc != ''">
				AND A.NA_BZPLC = #{naBzplc}
			</if>
	        <if test="searchAucObjDsc != null and searchAucObjDsc != ''">
				AND A.AUC_OBJ_DSC=#{searchAucObjDsc}
	        </if>
	        <if test="searchTrmnAmnNo != null and searchTrmnAmnNo != ''">
				AND A.TRMN_AMNNO = #{searchTrmnAmnNo}		
			</if>
	        <if test="searchTxt != null and searchTxt != ''">
	            AND (
	            	SUBSTRING(A.SRA_INDV_AMNNO,LENGTH(A.SRA_INDV_AMNNO)-4,4 ) LIKE '%' || #{searchTxt} ||'%'
	            )
	        </if>	
	        <choose>
	        	<when test = "searchDate != null and searchDate != ''">
	        		AND A.AUC_DT = #{searchDate}
	        	</when>
	        	<otherwise>
	        		AND A.AUC_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
	        	</otherwise>
	        </choose>
			
		) T
		GROUP BY T.NA_BZPLC, T.AUC_DT
	</select>
	
	<!-- 공통 코드 리스트 조회 -->
	<select id="selectCodeList" parameterType="map" resultType="map">
		SELECT BSN_DSC
			 , SIMP_C
			 , SIMP_TPC
			 , SIMP_C_GRP_SQNO
			 , SIMP_C_YN
			 , SIMP_CNM
			 , PRET_SIMP_TPC
			 , PRET_SIMP_C
			 , SORT_SQ
		  FROM TB_LA_IS_MH_COMN_APL
		 WHERE SIMP_TPC = #{simpTpc}
		 ORDER BY SORT_SQ ASC
	</select>
	
	<!-- 경매구간 정보 조회 -->
	<select id="getStnInfo" parameterType="map" resultType="map">
		SELECT A.*
		FROM TB_LA_IS_MH_AUC_STN A
		WHERE A.AUC_DT = #{searchDate}
		AND A.NA_BZPLC = #{naBzplc}
		AND A.AUC_OBJ_DSC = #{aucObjDsc}
		AND A.RG_SQNO = #{rgSqno}
	</select>
	
	<select id="selectVetList" parameterType="map" resultType="map">
		SELECT LVST_MKT_TRPL_AMNNO
			 , BRKR_NAME
		  FROM TB_LA_IS_MM_TRPL
		 WHERE NA_BZPLC = #{naBzplc}
		   AND LVST_MKT_TRPL_DSC = '1'
		   AND DEL_YN = '0'
	</select>
</mapper>